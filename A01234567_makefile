# makefile for hello world
# coded by Carol Hazlewood
# September 9, 2008
# modified by Preston Maness
# 7 June 2012

# I can't agree with manually editing makefiles when the autotools
# do a far superior job of it. And of course you don't want to pull
# a Bumblebee. Deleting /usr will NOT speed up your computer...

#letting make work for us...
CXX=g++
CXXFLAGS=-c -g -Wall -O3
LDFLAGS=
SOURCES=A01234567_hello.cpp
OBJECTS=$(SOURCES:.cpp=.o)
EXECUTABLE=A01234567_hello

#The typical case. Compiling to objects and then linking.

output: $(EXECUTABLE)
	./$(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LDFLAGS) $(OBJECTS) -o $@

.cpp.o:
	$(CXX) $(CXXFLAGS) $< -o $@

# the following rules produce intermediate files

# ===========================================================

# preprocessed produces source file with include statements expanded
# and redirects the output to file A01234567_preprocessed

A01234567_preprocessed: A01234567_hello.cpp
	g++ -E -Wall A01234567_hello.cpp > A01234567_preprocessed

# compiled produces assembly language file A01234567_hello.s

A01234567_compiled:

# assembled produces object language file A01234567_hello.o
# and hexdump's it to a file A01234567_o_dump

A01234567_assembled:

# linked produces executable language file A01234567_hello
# and hexdump's it to a file A01234567_x_dump

A01234567_linked:

clean:
	rm *.o
	rm *.s
	rm A01234567_hello
	rm *dump*
	rm *preproc*
